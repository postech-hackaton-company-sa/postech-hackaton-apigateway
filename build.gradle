plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'org.sonarqube' version '4.2.1.3168'
}

group = 'com.postech-hackaton'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.jacoco:org.jacoco.core:0.8.7'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = '0.8.10'
}

jacocoTestReport {
	getExecutionData().setFrom(fileTree(buildDir).include('/jacoco/*.exec'))
	reports {
		csv.required.set(false)
		xml.required.set(true)
		xml.outputLocation.set(file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml"))
	}
	dependsOn test
}

test {
//	useJUnitPlatform()

	finalizedBy jacocoTestReport
}


sonar {
	properties {
		property "sonar.projectKey", "postech-hackaton-company-sa_postech-hackaton-ponto-eletronico"
		property "sonar.organization", "postech-hackaton-company-sa"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
